<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2898531823.github.io</id>
    <title>个人练习生</title>
    <updated>2020-10-19T12:18:44.925Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2898531823.github.io"/>
    <link rel="self" href="https://2898531823.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://2898531823.github.io/images/avatar.png</logo>
    <icon>https://2898531823.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 个人练习生</rights>
    <entry>
        <title type="html"><![CDATA[# Mybatis]]></title>
        <id>https://2898531823.github.io/hello-gridea/</id>
        <link href="https://2898531823.github.io/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="xml映射文件">XML映射文件</h2>
<h3 id="myhabits参数处理">Myhabits参数处理</h3>
<p>Mybatis 多个参数会做特殊处理,多个参数会被封装成一个map</p>
<p>key:param1...paramn</p>
<p>vaule:传入的参数</p>
<p>#{param1}就是从map中获取对应的第一个vaule</p>
<p>@param(&quot;xx&quot;)参数注解可以明确指定封装参数时map的key为xx</p>
<p>如果多个参数符合pojo的属性,直接传入pojo对象,#{属性}</p>
<p>如果多个参数不符合,则可以传入一个map,#{map的key}</p>
<h3 id="select">select</h3>
<h4 id="mapkey">@MapKey</h4>
<p>@MapKey可以指定一个字段作为map的key返回,一般设置为唯一键</p>
<h3 id="结果映射">结果映射</h3>
<h4 id="resultmap">resultMap</h4>
<p>自定义返回类型映射</p>
<p><id/>主键</p>
<p><result>普通键</p>
<p>column 数据库字段 property pojo字段</p>
<pre><code class="language-xml">&lt;resultMap id=&quot;userResultMap&quot; type=&quot;User&quot;&gt;
  &lt;id property=&quot;id&quot; column=&quot;user_id&quot; /&gt;
  &lt;result property=&quot;username&quot; column=&quot;user_name&quot;/&gt;
  &lt;result property=&quot;password&quot; column=&quot;hashed_password&quot;/&gt;
&lt;/resultMap&gt;
</code></pre>
<h2 id="与取值的区别">#{}与${}取值的区别</h2>
<p>#{}是预编译的,用占位符替代sql语句中的参数,PrepareedStatement,防止sql注入.</p>
<p>${}是直接拼接在sql语句中,有安全问题</p>
<p>在大多数情况中,都应该使用#{},原生jdbc不支持占位符就是用${}</p>
<h2 id="关联查询">关联查询</h2>
<h3 id="级联属性封装-一对多">级联属性封装--一对多</h3>
<pre><code class="language-xml">&lt;resultMap type=&quot;Category&quot; id=&quot;categoryBean&quot;&gt;
            &lt;id column=&quot;cid&quot; property=&quot;id&quot; /&gt;
            &lt;result column=&quot;cname&quot; property=&quot;name&quot; /&gt;
     
            &lt;!-- 一对多的关系 --&gt;
            &lt;!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 --&gt;
            &lt;collection property=&quot;products&quot; ofType=&quot;Product&quot;&gt;
                &lt;id column=&quot;pid&quot; property=&quot;id&quot; /&gt;
                &lt;result column=&quot;pname&quot; property=&quot;name&quot; /&gt;
                &lt;result column=&quot;price&quot; property=&quot;price&quot; /&gt;
            &lt;/collection&gt;
        &lt;/resultMap&gt;
</code></pre>
<h3 id="association-多对一">association--多对一</h3>
<pre><code class="language-xml">&lt;!--category.xml--&gt;
&lt;resultMap type=&quot;Product&quot; id=&quot;productBean&quot;&gt;
            &lt;id column=&quot;pid&quot; property=&quot;id&quot; /&gt;
            &lt;result column=&quot;pname&quot; property=&quot;name&quot; /&gt;
            &lt;result column=&quot;price&quot; property=&quot;price&quot; /&gt;
     
            &lt;!-- 多对一的关系 --&gt;
            &lt;!-- property: 指的是属性名称, javaType：指的是属性的类型 --&gt;
            &lt;association property=&quot;category&quot; javaType=&quot;Category&quot;&gt;
                &lt;id column=&quot;cid&quot; property=&quot;id&quot;/&gt;
                &lt;result column=&quot;cname&quot; property=&quot;name&quot;/&gt;
            &lt;/association&gt;
        &lt;/resultMap&gt;
</code></pre>
]]></content>
    </entry>
</feed>